#!/usr/bin/env bash

failIfDifferent() {
    if [[ "$1" == "$2" ]]; then
        echo "pass"
    else
        echo "FAIL"
    fi
}

prompt() {
    echo "Press enter to continue."
    # shellcheck disable=SC2034
    read line
    echo ""
    echo ""
}

cd "${0%/*}"
echo "Edit the text file without Hexmode."
prompt
vim uncompressed.txt
echo "Edit the text file with Hexmode."
prompt
vim -b uncompressed.txt
echo "Edit the compressed file without Hexmode"
prompt
vim compressed.txt.gz
echo "Edit the compressed file as binary. Again, gzip should win and no hex should be shown."
prompt
vim -b compressed.txt.gz
echo "Edit a zip file without Hexmode."
prompt
vim zipfile.zip
echo "Edit a zip file as binary. Zip plugin should win, no hex should be shown."
prompt
vim -b zipfile.zip
echo "Edit a tar file without Hexmode."
prompt
vim tarfile.tar
echo "Edit a tar file as binary. Tar plugin should win, no hex should be shown."
prompt
vim -b tarfile.tar

# https://stackoverflow.com/a/27776822
case "$(uname -s)" in
	Darwin)
		MD5=md5
		;;
	Linux)
		MD5=md5sum
		;;
esac

echo -n "A binary file doesn't change when saved ... "
cp zipfile.zip binary-file
before=$(${MD5} binary-file)
vim -b -c ":wq" binary-file
failIfDifferent "$before" "$(${MD5} binary-file)"
rm binary-file

echo -n "An auto-detected binary file doesn't change when saved ... "
cp zipfile.zip binary-file
before=$(${MD5} binary-file)
vim -c "let g:hexmode_autodetect = 1" -c ":wq" binary-file
failIfDifferent "$before" "$(${MD5} binary-file)"
rm binary-file
